# config/packages/security.yaml
# config/packages/security.yaml
security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        users_in_memory: { memory: null }

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: users_in_memory
            # L'option `anonymous` est supprimée dans Symfony 6.x
            # Les utilisateurs anonymes sont autorisés par défaut

            # Si vous avez une authentification par formulaire, configurez-la ici
            # form_login:
            #     login_path: login
            #     check_path: login

            logout:
                path: logout
                target: /

    access_control:
        # Permettre l'accès anonyme à /contact/send pour les requêtes POST
        - { path: ^/contact/send$, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [POST] }

        # Autres règles d'accès
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
